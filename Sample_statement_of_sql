1. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

SELECT DISTINCT CITY
FROM station
WHERE CITY like '%a'or city like '%e'or city like '%i'or city like '%o'or city like '%u';
--------------OR-------------------------------

SELECT DISTINCT CITY
FROM station
WHERE CITY REGEXP '[aeiou]$';

2. Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

SELECT DISTINCT CITY 
FROM STATION
WHERE SUBSTRING(CITY,1,1) in('A','E','I','O','U')
AND SUBSTRING(REVERSE(CITY),1,1) in('A','E','I','O','U');
-----------------------------OR--------------------------
SELECT DISTINCT CITY
FROM STATION
WHERE LEFT(CITY, 1) IN ('A', 'E', 'I', 'O', 'U')
AND RIGHT(CITY, 1) IN ('A', 'E', 'I', 'O', 'U');

3. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates. / 
/Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

select distinct city from station 
where city not like 'A%'
and city not like 'E%'
and city not like 'I%'
and city not like 'O%'
and city not like 'U%';

4. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

select distinct city from station 
where (city not like '%a'
and city  NOT LIKE '%e'
AND city NOT LIKE '%i'
AND city NOT LIKE '%o'
AND city NOT LIKE '%u') or
(CITY NOT LIKE 'a%'
AND CITY NOT LIKE 'e%'
AND CITY NOT LIKE 'i%'
AND CITY NOT LIKE 'o%'
AND CITY NOT LIKE 'u%');

5. Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION is greater than . Round your answer to  decimal places.

SELECT ROUND(LONG_W,4) as W_LONG
FROM station 
WHERE LAT_N = (select min(lat_n) FROM station WHERE LAT_N > 38.7780 );

6. Consider P1(a,b) and P2(c,d) to be two points on a 2D plane.
  >a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
  >b happens to equal the minimum value in Western Longitude (LONG_W in STATION).
  >c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
  >d happens to equal the maximum value in Western Longitude (LONG_W in STATION).
Query the Manhattan Distance between points P1 and P2 and round it to a scale of 4 decimal places.

SELECT ROUND((MAX(LAT_N) - MIN(LAT_N) + MAX(LONG_W)- MIN(LONG_W)),4)AS D
FROM STATION ;








